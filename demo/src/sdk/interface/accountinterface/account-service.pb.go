// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account-service.proto

package scryinfo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_OK    Status = 0
	Status_ERROR Status = 1
)

var Status_name = map[int32]string{
	0: "OK",
	1: "ERROR",
}

var Status_value = map[string]int32{
	"OK":    0,
	"ERROR": 1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bcbe4554547bad70, []int{0}
}

type Type int32

const (
	Type_DEFAULT Type = 0
)

var Type_name = map[int32]string{
	0: "DEFAULT",
}

var Type_value = map[string]int32{
	"DEFAULT": 0,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}

func (Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bcbe4554547bad70, []int{1}
}

type AddressParameter struct {
	Password             string   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressParameter) Reset()         { *m = AddressParameter{} }
func (m *AddressParameter) String() string { return proto.CompactTextString(m) }
func (*AddressParameter) ProtoMessage()    {}
func (*AddressParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcbe4554547bad70, []int{0}
}

func (m *AddressParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressParameter.Unmarshal(m, b)
}
func (m *AddressParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressParameter.Marshal(b, m, deterministic)
}
func (m *AddressParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressParameter.Merge(m, src)
}
func (m *AddressParameter) XXX_Size() int {
	return xxx_messageInfo_AddressParameter.Size(m)
}
func (m *AddressParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressParameter.DiscardUnknown(m)
}

var xxx_messageInfo_AddressParameter proto.InternalMessageInfo

func (m *AddressParameter) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AddressParameter) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type AddressInfo struct {
	Status               Status   `protobuf:"varint,1,opt,name=status,proto3,enum=scryinfo.Status" json:"status,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressInfo) Reset()         { *m = AddressInfo{} }
func (m *AddressInfo) String() string { return proto.CompactTextString(m) }
func (*AddressInfo) ProtoMessage()    {}
func (*AddressInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcbe4554547bad70, []int{1}
}

func (m *AddressInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressInfo.Unmarshal(m, b)
}
func (m *AddressInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressInfo.Marshal(b, m, deterministic)
}
func (m *AddressInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressInfo.Merge(m, src)
}
func (m *AddressInfo) XXX_Size() int {
	return xxx_messageInfo_AddressInfo.Size(m)
}
func (m *AddressInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AddressInfo proto.InternalMessageInfo

func (m *AddressInfo) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_OK
}

func (m *AddressInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressInfo) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type CipherParameter struct {
	Type                 Type     `protobuf:"varint,1,opt,name=type,proto3,enum=scryinfo.Type" json:"type,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Message              []byte   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CipherParameter) Reset()         { *m = CipherParameter{} }
func (m *CipherParameter) String() string { return proto.CompactTextString(m) }
func (*CipherParameter) ProtoMessage()    {}
func (*CipherParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcbe4554547bad70, []int{2}
}

func (m *CipherParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CipherParameter.Unmarshal(m, b)
}
func (m *CipherParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CipherParameter.Marshal(b, m, deterministic)
}
func (m *CipherParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CipherParameter.Merge(m, src)
}
func (m *CipherParameter) XXX_Size() int {
	return xxx_messageInfo_CipherParameter.Size(m)
}
func (m *CipherParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_CipherParameter.DiscardUnknown(m)
}

var xxx_messageInfo_CipherParameter proto.InternalMessageInfo

func (m *CipherParameter) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_DEFAULT
}

func (m *CipherParameter) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CipherParameter) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CipherParameter) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

type CipherText struct {
	Status               Status   `protobuf:"varint,1,opt,name=status,proto3,enum=scryinfo.Status" json:"status,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CipherText) Reset()         { *m = CipherText{} }
func (m *CipherText) String() string { return proto.CompactTextString(m) }
func (*CipherText) ProtoMessage()    {}
func (*CipherText) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcbe4554547bad70, []int{3}
}

func (m *CipherText) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CipherText.Unmarshal(m, b)
}
func (m *CipherText) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CipherText.Marshal(b, m, deterministic)
}
func (m *CipherText) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CipherText.Merge(m, src)
}
func (m *CipherText) XXX_Size() int {
	return xxx_messageInfo_CipherText.Size(m)
}
func (m *CipherText) XXX_DiscardUnknown() {
	xxx_messageInfo_CipherText.DiscardUnknown(m)
}

var xxx_messageInfo_CipherText proto.InternalMessageInfo

func (m *CipherText) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_OK
}

func (m *CipherText) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CipherText) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterEnum("scryinfo.Status", Status_name, Status_value)
	proto.RegisterEnum("scryinfo.Type", Type_name, Type_value)
	proto.RegisterType((*AddressParameter)(nil), "scryinfo.AddressParameter")
	proto.RegisterType((*AddressInfo)(nil), "scryinfo.AddressInfo")
	proto.RegisterType((*CipherParameter)(nil), "scryinfo.CipherParameter")
	proto.RegisterType((*CipherText)(nil), "scryinfo.CipherText")
}

func init() { proto.RegisterFile("account-service.proto", fileDescriptor_bcbe4554547bad70) }

var fileDescriptor_bcbe4554547bad70 = []byte{
	// 381 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0xcb, 0x6e, 0xda, 0x40,
	0x14, 0xc5, 0xc6, 0x35, 0x70, 0xa1, 0x60, 0x4d, 0x8b, 0xe4, 0xba, 0x1b, 0xe4, 0x15, 0x42, 0x2a,
	0x0b, 0xba, 0xaf, 0x84, 0x78, 0xb4, 0x15, 0x95, 0xa8, 0x06, 0xda, 0x55, 0x36, 0x13, 0xfb, 0x42,
	0xbc, 0x60, 0x6c, 0xcd, 0x0c, 0x49, 0xfc, 0x01, 0xf9, 0xd3, 0x7c, 0x48, 0xe4, 0xb1, 0x89, 0x05,
	0x88, 0x45, 0xc8, 0x6e, 0xee, 0x9c, 0xb9, 0xe7, 0xe1, 0x23, 0x43, 0x97, 0x05, 0x41, 0xbc, 0xe7,
	0xea, 0x9b, 0x44, 0x71, 0x1f, 0x05, 0x38, 0x4c, 0x44, 0xac, 0x62, 0x52, 0x97, 0x81, 0x48, 0x23,
	0xbe, 0x89, 0xfd, 0x5f, 0xe0, 0x8c, 0xc3, 0x50, 0xa0, 0x94, 0x7f, 0x99, 0x60, 0x3b, 0x54, 0x28,
	0x88, 0x07, 0xf5, 0x84, 0x49, 0xf9, 0x10, 0x8b, 0xd0, 0x35, 0x7a, 0x46, 0xbf, 0x41, 0x5f, 0x67,
	0xe2, 0x42, 0x8d, 0xe5, 0xef, 0x5d, 0x53, 0x43, 0x87, 0xd1, 0x0f, 0xa0, 0x59, 0x30, 0xfd, 0xe6,
	0x9b, 0x98, 0xf4, 0xc1, 0x96, 0x8a, 0xa9, 0xbd, 0xd4, 0x14, 0xed, 0x91, 0x33, 0x3c, 0x68, 0x0e,
	0x57, 0xfa, 0x9e, 0x16, 0xf8, 0x65, 0x4a, 0xe2, 0x40, 0x75, 0x27, 0xb7, 0x6e, 0x55, 0xdf, 0x66,
	0x47, 0xff, 0xc9, 0x80, 0xce, 0x24, 0x4a, 0xee, 0x50, 0x94, 0x76, 0x7d, 0xb0, 0x54, 0x9a, 0x60,
	0xa1, 0xd3, 0x2e, 0x75, 0xd6, 0x69, 0x82, 0x54, 0x63, 0x47, 0x91, 0xcc, 0xcb, 0x91, 0xaa, 0xc7,
	0xfa, 0x2e, 0xd4, 0x76, 0x28, 0x25, 0xdb, 0xa2, 0x6b, 0xf5, 0x8c, 0x7e, 0x8b, 0x1e, 0x46, 0xff,
	0x06, 0x20, 0xb7, 0xb1, 0xc6, 0x47, 0xf5, 0x86, 0xac, 0x04, 0xac, 0x90, 0x29, 0xa6, 0x3d, 0xb4,
	0xa8, 0x3e, 0x9f, 0xa7, 0x1c, 0x7c, 0x05, 0x3b, 0xdf, 0x23, 0x36, 0x98, 0xcb, 0x85, 0x53, 0x21,
	0x0d, 0xf8, 0x30, 0xa3, 0x74, 0x49, 0x1d, 0x63, 0xf0, 0x09, 0xac, 0x2c, 0x18, 0x69, 0x42, 0x6d,
	0x3a, 0x9b, 0x8f, 0xff, 0xfd, 0x59, 0x3b, 0x95, 0xd1, 0xb3, 0x09, 0xb0, 0xc0, 0x74, 0x95, 0xb7,
	0x4c, 0xe6, 0xd0, 0xf9, 0x89, 0x1c, 0x05, 0x53, 0x58, 0x74, 0x42, 0xbc, 0xd2, 0xd3, 0x69, 0xe1,
	0x5e, 0xf7, 0x0c, 0xcb, 0x2a, 0xf4, 0x2b, 0x64, 0x0a, 0x1f, 0xff, 0xa3, 0x88, 0x36, 0xe9, 0xbb,
	0x58, 0x26, 0xd0, 0x9e, 0xc4, 0x5c, 0x21, 0x57, 0x33, 0x1e, 0x88, 0x34, 0x51, 0xe4, 0x4b, 0xf9,
	0xf4, 0xa4, 0x4d, 0xef, 0xf3, 0x29, 0x94, 0x7d, 0xe1, 0x23, 0x92, 0x29, 0x5e, 0x4d, 0xf2, 0x03,
	0x1a, 0xab, 0x68, 0xcb, 0x99, 0xda, 0x0b, 0xbc, 0x62, 0xff, 0xd6, 0xd6, 0xbf, 0xcf, 0xf7, 0x97,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x8e, 0xe4, 0xb0, 0x25, 0x57, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KeyServiceClient is the client API for KeyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KeyServiceClient interface {
	//生成地址
	GenerateAddress(ctx context.Context, in *AddressParameter, opts ...grpc.CallOption) (*AddressInfo, error)
	//校验地址
	VerifyAddress(ctx context.Context, in *AddressParameter, opts ...grpc.CallOption) (*AddressInfo, error)
	//内容加密
	ContentEncrypt(ctx context.Context, in *CipherParameter, opts ...grpc.CallOption) (*CipherText, error)
	//内容解密
	ContentDecrypt(ctx context.Context, in *CipherParameter, opts ...grpc.CallOption) (*CipherText, error)
	//消息签名
	Signature(ctx context.Context, in *CipherParameter, opts ...grpc.CallOption) (*CipherText, error)
}

type keyServiceClient struct {
	cc *grpc.ClientConn
}

func NewKeyServiceClient(cc *grpc.ClientConn) KeyServiceClient {
	return &keyServiceClient{cc}
}

func (c *keyServiceClient) GenerateAddress(ctx context.Context, in *AddressParameter, opts ...grpc.CallOption) (*AddressInfo, error) {
	out := new(AddressInfo)
	err := c.cc.Invoke(ctx, "/scryinfo.KeyService/GenerateAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyServiceClient) VerifyAddress(ctx context.Context, in *AddressParameter, opts ...grpc.CallOption) (*AddressInfo, error) {
	out := new(AddressInfo)
	err := c.cc.Invoke(ctx, "/scryinfo.KeyService/VerifyAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyServiceClient) ContentEncrypt(ctx context.Context, in *CipherParameter, opts ...grpc.CallOption) (*CipherText, error) {
	out := new(CipherText)
	err := c.cc.Invoke(ctx, "/scryinfo.KeyService/ContentEncrypt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyServiceClient) ContentDecrypt(ctx context.Context, in *CipherParameter, opts ...grpc.CallOption) (*CipherText, error) {
	out := new(CipherText)
	err := c.cc.Invoke(ctx, "/scryinfo.KeyService/ContentDecrypt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyServiceClient) Signature(ctx context.Context, in *CipherParameter, opts ...grpc.CallOption) (*CipherText, error) {
	out := new(CipherText)
	err := c.cc.Invoke(ctx, "/scryinfo.KeyService/Signature", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KeyServiceServer is the server API for KeyService service.
type KeyServiceServer interface {
	//生成地址
	GenerateAddress(context.Context, *AddressParameter) (*AddressInfo, error)
	//校验地址
	VerifyAddress(context.Context, *AddressParameter) (*AddressInfo, error)
	//内容加密
	ContentEncrypt(context.Context, *CipherParameter) (*CipherText, error)
	//内容解密
	ContentDecrypt(context.Context, *CipherParameter) (*CipherText, error)
	//消息签名
	Signature(context.Context, *CipherParameter) (*CipherText, error)
}

func RegisterKeyServiceServer(s *grpc.Server, srv KeyServiceServer) {
	s.RegisterService(&_KeyService_serviceDesc, srv)
}

func _KeyService_GenerateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyServiceServer).GenerateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scryinfo.KeyService/GenerateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyServiceServer).GenerateAddress(ctx, req.(*AddressParameter))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeyService_VerifyAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyServiceServer).VerifyAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scryinfo.KeyService/VerifyAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyServiceServer).VerifyAddress(ctx, req.(*AddressParameter))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeyService_ContentEncrypt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CipherParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyServiceServer).ContentEncrypt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scryinfo.KeyService/ContentEncrypt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyServiceServer).ContentEncrypt(ctx, req.(*CipherParameter))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeyService_ContentDecrypt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CipherParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyServiceServer).ContentDecrypt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scryinfo.KeyService/ContentDecrypt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyServiceServer).ContentDecrypt(ctx, req.(*CipherParameter))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeyService_Signature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CipherParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyServiceServer).Signature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scryinfo.KeyService/Signature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyServiceServer).Signature(ctx, req.(*CipherParameter))
	}
	return interceptor(ctx, in, info, handler)
}

var _KeyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "scryinfo.KeyService",
	HandlerType: (*KeyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateAddress",
			Handler:    _KeyService_GenerateAddress_Handler,
		},
		{
			MethodName: "VerifyAddress",
			Handler:    _KeyService_VerifyAddress_Handler,
		},
		{
			MethodName: "ContentEncrypt",
			Handler:    _KeyService_ContentEncrypt_Handler,
		},
		{
			MethodName: "ContentDecrypt",
			Handler:    _KeyService_ContentDecrypt_Handler,
		},
		{
			MethodName: "Signature",
			Handler:    _KeyService_Signature_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "account-service.proto",
}
