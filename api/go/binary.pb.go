// Code generated by protoc-gen-go. DO NOT EDIT.
// source: binary.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateAccountParams struct {
	Password             string   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAccountParams) Reset()         { *m = CreateAccountParams{} }
func (m *CreateAccountParams) String() string { return proto.CompactTextString(m) }
func (*CreateAccountParams) ProtoMessage()    {}
func (*CreateAccountParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{0}
}

func (m *CreateAccountParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccountParams.Unmarshal(m, b)
}
func (m *CreateAccountParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccountParams.Marshal(b, m, deterministic)
}
func (m *CreateAccountParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccountParams.Merge(m, src)
}
func (m *CreateAccountParams) XXX_Size() int {
	return xxx_messageInfo_CreateAccountParams.Size(m)
}
func (m *CreateAccountParams) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccountParams.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccountParams proto.InternalMessageInfo

func (m *CreateAccountParams) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AccountResult struct {
	Result               *Result  `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	AccountId            string   `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountResult) Reset()         { *m = AccountResult{} }
func (m *AccountResult) String() string { return proto.CompactTextString(m) }
func (*AccountResult) ProtoMessage()    {}
func (*AccountResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{1}
}

func (m *AccountResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountResult.Unmarshal(m, b)
}
func (m *AccountResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountResult.Marshal(b, m, deterministic)
}
func (m *AccountResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountResult.Merge(m, src)
}
func (m *AccountResult) XXX_Size() int {
	return xxx_messageInfo_AccountResult.Size(m)
}
func (m *AccountResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountResult.DiscardUnknown(m)
}

var xxx_messageInfo_AccountResult proto.InternalMessageInfo

func (m *AccountResult) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *AccountResult) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type TransferEthParams struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	To                   string   `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Value                int64    `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferEthParams) Reset()         { *m = TransferEthParams{} }
func (m *TransferEthParams) String() string { return proto.CompactTextString(m) }
func (*TransferEthParams) ProtoMessage()    {}
func (*TransferEthParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{2}
}

func (m *TransferEthParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferEthParams.Unmarshal(m, b)
}
func (m *TransferEthParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferEthParams.Marshal(b, m, deterministic)
}
func (m *TransferEthParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferEthParams.Merge(m, src)
}
func (m *TransferEthParams) XXX_Size() int {
	return xxx_messageInfo_TransferEthParams.Size(m)
}
func (m *TransferEthParams) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferEthParams.DiscardUnknown(m)
}

var xxx_messageInfo_TransferEthParams proto.InternalMessageInfo

func (m *TransferEthParams) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *TransferEthParams) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *TransferEthParams) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *TransferEthParams) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type EthBalanceParams struct {
	Owner                string   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthBalanceParams) Reset()         { *m = EthBalanceParams{} }
func (m *EthBalanceParams) String() string { return proto.CompactTextString(m) }
func (*EthBalanceParams) ProtoMessage()    {}
func (*EthBalanceParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{3}
}

func (m *EthBalanceParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthBalanceParams.Unmarshal(m, b)
}
func (m *EthBalanceParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthBalanceParams.Marshal(b, m, deterministic)
}
func (m *EthBalanceParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthBalanceParams.Merge(m, src)
}
func (m *EthBalanceParams) XXX_Size() int {
	return xxx_messageInfo_EthBalanceParams.Size(m)
}
func (m *EthBalanceParams) XXX_DiscardUnknown() {
	xxx_messageInfo_EthBalanceParams.DiscardUnknown(m)
}

var xxx_messageInfo_EthBalanceParams proto.InternalMessageInfo

func (m *EthBalanceParams) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type EthBalanceResult struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Balance              int64    `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthBalanceResult) Reset()         { *m = EthBalanceResult{} }
func (m *EthBalanceResult) String() string { return proto.CompactTextString(m) }
func (*EthBalanceResult) ProtoMessage()    {}
func (*EthBalanceResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{4}
}

func (m *EthBalanceResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthBalanceResult.Unmarshal(m, b)
}
func (m *EthBalanceResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthBalanceResult.Marshal(b, m, deterministic)
}
func (m *EthBalanceResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthBalanceResult.Merge(m, src)
}
func (m *EthBalanceResult) XXX_Size() int {
	return xxx_messageInfo_EthBalanceResult.Size(m)
}
func (m *EthBalanceResult) XXX_DiscardUnknown() {
	xxx_messageInfo_EthBalanceResult.DiscardUnknown(m)
}

var xxx_messageInfo_EthBalanceResult proto.InternalMessageInfo

func (m *EthBalanceResult) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *EthBalanceResult) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type ClientInfo struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientInfo) Reset()         { *m = ClientInfo{} }
func (m *ClientInfo) String() string { return proto.CompactTextString(m) }
func (*ClientInfo) ProtoMessage()    {}
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{5}
}

func (m *ClientInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientInfo.Unmarshal(m, b)
}
func (m *ClientInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientInfo.Marshal(b, m, deterministic)
}
func (m *ClientInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientInfo.Merge(m, src)
}
func (m *ClientInfo) XXX_Size() int {
	return xxx_messageInfo_ClientInfo.Size(m)
}
func (m *ClientInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClientInfo proto.InternalMessageInfo

func (m *ClientInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ClientInfo) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Event struct {
	Time                 int64    `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	JsonData             string   `protobuf:"bytes,2,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{6}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Event) GetJsonData() string {
	if m != nil {
		return m.JsonData
	}
	return ""
}

type TxParams struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Value                int64    `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	Pending              bool     `protobuf:"varint,4,opt,name=pending,proto3" json:"pending,omitempty"`
	GasPrice             int64    `protobuf:"varint,5,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`
	GasLimit             uint64   `protobuf:"varint,6,opt,name=gasLimit,proto3" json:"gasLimit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxParams) Reset()         { *m = TxParams{} }
func (m *TxParams) String() string { return proto.CompactTextString(m) }
func (*TxParams) ProtoMessage()    {}
func (*TxParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{7}
}

func (m *TxParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxParams.Unmarshal(m, b)
}
func (m *TxParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxParams.Marshal(b, m, deterministic)
}
func (m *TxParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxParams.Merge(m, src)
}
func (m *TxParams) XXX_Size() int {
	return xxx_messageInfo_TxParams.Size(m)
}
func (m *TxParams) XXX_DiscardUnknown() {
	xxx_messageInfo_TxParams.DiscardUnknown(m)
}

var xxx_messageInfo_TxParams proto.InternalMessageInfo

func (m *TxParams) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *TxParams) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *TxParams) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TxParams) GetPending() bool {
	if m != nil {
		return m.Pending
	}
	return false
}

func (m *TxParams) GetGasPrice() int64 {
	if m != nil {
		return m.GasPrice
	}
	return 0
}

func (m *TxParams) GetGasLimit() uint64 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

type PublishParams struct {
	TxParam              *TxParams `protobuf:"bytes,1,opt,name=txParam,proto3" json:"txParam,omitempty"`
	Price                int64     `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	MetaDataID           []byte    `protobuf:"bytes,3,opt,name=metaDataID,proto3" json:"metaDataID,omitempty"`
	ProofDataIDs         []string  `protobuf:"bytes,4,rep,name=proofDataIDs,proto3" json:"proofDataIDs,omitempty"`
	ProofNum             int32     `protobuf:"varint,5,opt,name=proofNum,proto3" json:"proofNum,omitempty"`
	DetailsID            string    `protobuf:"bytes,6,opt,name=detailsID,proto3" json:"detailsID,omitempty"`
	SupportVerify        bool      `protobuf:"varint,7,opt,name=supportVerify,proto3" json:"supportVerify,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PublishParams) Reset()         { *m = PublishParams{} }
func (m *PublishParams) String() string { return proto.CompactTextString(m) }
func (*PublishParams) ProtoMessage()    {}
func (*PublishParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{8}
}

func (m *PublishParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishParams.Unmarshal(m, b)
}
func (m *PublishParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishParams.Marshal(b, m, deterministic)
}
func (m *PublishParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishParams.Merge(m, src)
}
func (m *PublishParams) XXX_Size() int {
	return xxx_messageInfo_PublishParams.Size(m)
}
func (m *PublishParams) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishParams.DiscardUnknown(m)
}

var xxx_messageInfo_PublishParams proto.InternalMessageInfo

func (m *PublishParams) GetTxParam() *TxParams {
	if m != nil {
		return m.TxParam
	}
	return nil
}

func (m *PublishParams) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *PublishParams) GetMetaDataID() []byte {
	if m != nil {
		return m.MetaDataID
	}
	return nil
}

func (m *PublishParams) GetProofDataIDs() []string {
	if m != nil {
		return m.ProofDataIDs
	}
	return nil
}

func (m *PublishParams) GetProofNum() int32 {
	if m != nil {
		return m.ProofNum
	}
	return 0
}

func (m *PublishParams) GetDetailsID() string {
	if m != nil {
		return m.DetailsID
	}
	return ""
}

func (m *PublishParams) GetSupportVerify() bool {
	if m != nil {
		return m.SupportVerify
	}
	return false
}

type PublishResult struct {
	PublishId            string   `protobuf:"bytes,1,opt,name=publishId,proto3" json:"publishId,omitempty"`
	Result               *Result  `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishResult) Reset()         { *m = PublishResult{} }
func (m *PublishResult) String() string { return proto.CompactTextString(m) }
func (*PublishResult) ProtoMessage()    {}
func (*PublishResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{9}
}

func (m *PublishResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishResult.Unmarshal(m, b)
}
func (m *PublishResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishResult.Marshal(b, m, deterministic)
}
func (m *PublishResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishResult.Merge(m, src)
}
func (m *PublishResult) XXX_Size() int {
	return xxx_messageInfo_PublishResult.Size(m)
}
func (m *PublishResult) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishResult.DiscardUnknown(m)
}

var xxx_messageInfo_PublishResult proto.InternalMessageInfo

func (m *PublishResult) GetPublishId() string {
	if m != nil {
		return m.PublishId
	}
	return ""
}

func (m *PublishResult) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type PrepareParams struct {
	TxParam              *TxParams `protobuf:"bytes,1,opt,name=txParam,proto3" json:"txParam,omitempty"`
	PublishId            string    `protobuf:"bytes,2,opt,name=publishId,proto3" json:"publishId,omitempty"`
	StartVerify          bool      `protobuf:"varint,3,opt,name=startVerify,proto3" json:"startVerify,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PrepareParams) Reset()         { *m = PrepareParams{} }
func (m *PrepareParams) String() string { return proto.CompactTextString(m) }
func (*PrepareParams) ProtoMessage()    {}
func (*PrepareParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{10}
}

func (m *PrepareParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareParams.Unmarshal(m, b)
}
func (m *PrepareParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareParams.Marshal(b, m, deterministic)
}
func (m *PrepareParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareParams.Merge(m, src)
}
func (m *PrepareParams) XXX_Size() int {
	return xxx_messageInfo_PrepareParams.Size(m)
}
func (m *PrepareParams) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareParams.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareParams proto.InternalMessageInfo

func (m *PrepareParams) GetTxParam() *TxParams {
	if m != nil {
		return m.TxParam
	}
	return nil
}

func (m *PrepareParams) GetPublishId() string {
	if m != nil {
		return m.PublishId
	}
	return ""
}

func (m *PrepareParams) GetStartVerify() bool {
	if m != nil {
		return m.StartVerify
	}
	return false
}

type Result struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{11}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Result) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type BuyParams struct {
	TxParam              *TxParams `protobuf:"bytes,1,opt,name=txParam,proto3" json:"txParam,omitempty"`
	TxId                 int64     `protobuf:"varint,2,opt,name=txId,proto3" json:"txId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BuyParams) Reset()         { *m = BuyParams{} }
func (m *BuyParams) String() string { return proto.CompactTextString(m) }
func (*BuyParams) ProtoMessage()    {}
func (*BuyParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{12}
}

func (m *BuyParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuyParams.Unmarshal(m, b)
}
func (m *BuyParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuyParams.Marshal(b, m, deterministic)
}
func (m *BuyParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyParams.Merge(m, src)
}
func (m *BuyParams) XXX_Size() int {
	return xxx_messageInfo_BuyParams.Size(m)
}
func (m *BuyParams) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyParams.DiscardUnknown(m)
}

var xxx_messageInfo_BuyParams proto.InternalMessageInfo

func (m *BuyParams) GetTxParam() *TxParams {
	if m != nil {
		return m.TxParam
	}
	return nil
}

func (m *BuyParams) GetTxId() int64 {
	if m != nil {
		return m.TxId
	}
	return 0
}

type CancelTxParams struct {
	TxParam              *TxParams `protobuf:"bytes,1,opt,name=txParam,proto3" json:"txParam,omitempty"`
	TxId                 int64     `protobuf:"varint,2,opt,name=txId,proto3" json:"txId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CancelTxParams) Reset()         { *m = CancelTxParams{} }
func (m *CancelTxParams) String() string { return proto.CompactTextString(m) }
func (*CancelTxParams) ProtoMessage()    {}
func (*CancelTxParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{13}
}

func (m *CancelTxParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelTxParams.Unmarshal(m, b)
}
func (m *CancelTxParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelTxParams.Marshal(b, m, deterministic)
}
func (m *CancelTxParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelTxParams.Merge(m, src)
}
func (m *CancelTxParams) XXX_Size() int {
	return xxx_messageInfo_CancelTxParams.Size(m)
}
func (m *CancelTxParams) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelTxParams.DiscardUnknown(m)
}

var xxx_messageInfo_CancelTxParams proto.InternalMessageInfo

func (m *CancelTxParams) GetTxParam() *TxParams {
	if m != nil {
		return m.TxParam
	}
	return nil
}

func (m *CancelTxParams) GetTxId() int64 {
	if m != nil {
		return m.TxId
	}
	return 0
}

type ReEncryptDataParams struct {
	TxParam               *TxParams `protobuf:"bytes,1,opt,name=txParam,proto3" json:"txParam,omitempty"`
	TxId                  int64     `protobuf:"varint,2,opt,name=txId,proto3" json:"txId,omitempty"`
	EncodedDataWithSeller []byte    `protobuf:"bytes,3,opt,name=encodedDataWithSeller,proto3" json:"encodedDataWithSeller,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}  `json:"-"`
	XXX_unrecognized      []byte    `json:"-"`
	XXX_sizecache         int32     `json:"-"`
}

func (m *ReEncryptDataParams) Reset()         { *m = ReEncryptDataParams{} }
func (m *ReEncryptDataParams) String() string { return proto.CompactTextString(m) }
func (*ReEncryptDataParams) ProtoMessage()    {}
func (*ReEncryptDataParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{14}
}

func (m *ReEncryptDataParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReEncryptDataParams.Unmarshal(m, b)
}
func (m *ReEncryptDataParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReEncryptDataParams.Marshal(b, m, deterministic)
}
func (m *ReEncryptDataParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReEncryptDataParams.Merge(m, src)
}
func (m *ReEncryptDataParams) XXX_Size() int {
	return xxx_messageInfo_ReEncryptDataParams.Size(m)
}
func (m *ReEncryptDataParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ReEncryptDataParams.DiscardUnknown(m)
}

var xxx_messageInfo_ReEncryptDataParams proto.InternalMessageInfo

func (m *ReEncryptDataParams) GetTxParam() *TxParams {
	if m != nil {
		return m.TxParam
	}
	return nil
}

func (m *ReEncryptDataParams) GetTxId() int64 {
	if m != nil {
		return m.TxId
	}
	return 0
}

func (m *ReEncryptDataParams) GetEncodedDataWithSeller() []byte {
	if m != nil {
		return m.EncodedDataWithSeller
	}
	return nil
}

type DataConfirmParams struct {
	TxParam              *TxParams `protobuf:"bytes,1,opt,name=txParam,proto3" json:"txParam,omitempty"`
	TxId                 int64     `protobuf:"varint,2,opt,name=txId,proto3" json:"txId,omitempty"`
	Truth                bool      `protobuf:"varint,3,opt,name=truth,proto3" json:"truth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DataConfirmParams) Reset()         { *m = DataConfirmParams{} }
func (m *DataConfirmParams) String() string { return proto.CompactTextString(m) }
func (*DataConfirmParams) ProtoMessage()    {}
func (*DataConfirmParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{15}
}

func (m *DataConfirmParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataConfirmParams.Unmarshal(m, b)
}
func (m *DataConfirmParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataConfirmParams.Marshal(b, m, deterministic)
}
func (m *DataConfirmParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataConfirmParams.Merge(m, src)
}
func (m *DataConfirmParams) XXX_Size() int {
	return xxx_messageInfo_DataConfirmParams.Size(m)
}
func (m *DataConfirmParams) XXX_DiscardUnknown() {
	xxx_messageInfo_DataConfirmParams.DiscardUnknown(m)
}

var xxx_messageInfo_DataConfirmParams proto.InternalMessageInfo

func (m *DataConfirmParams) GetTxParam() *TxParams {
	if m != nil {
		return m.TxParam
	}
	return nil
}

func (m *DataConfirmParams) GetTxId() int64 {
	if m != nil {
		return m.TxId
	}
	return 0
}

func (m *DataConfirmParams) GetTruth() bool {
	if m != nil {
		return m.Truth
	}
	return false
}

type ApproveTransferParams struct {
	TxParam              *TxParams `protobuf:"bytes,1,opt,name=txParam,proto3" json:"txParam,omitempty"`
	SpenderAddr          string    `protobuf:"bytes,2,opt,name=spenderAddr,proto3" json:"spenderAddr,omitempty"`
	Value                int64     `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ApproveTransferParams) Reset()         { *m = ApproveTransferParams{} }
func (m *ApproveTransferParams) String() string { return proto.CompactTextString(m) }
func (*ApproveTransferParams) ProtoMessage()    {}
func (*ApproveTransferParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{16}
}

func (m *ApproveTransferParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApproveTransferParams.Unmarshal(m, b)
}
func (m *ApproveTransferParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApproveTransferParams.Marshal(b, m, deterministic)
}
func (m *ApproveTransferParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApproveTransferParams.Merge(m, src)
}
func (m *ApproveTransferParams) XXX_Size() int {
	return xxx_messageInfo_ApproveTransferParams.Size(m)
}
func (m *ApproveTransferParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ApproveTransferParams.DiscardUnknown(m)
}

var xxx_messageInfo_ApproveTransferParams proto.InternalMessageInfo

func (m *ApproveTransferParams) GetTxParam() *TxParams {
	if m != nil {
		return m.TxParam
	}
	return nil
}

func (m *ApproveTransferParams) GetSpenderAddr() string {
	if m != nil {
		return m.SpenderAddr
	}
	return ""
}

func (m *ApproveTransferParams) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type VoteParams struct {
	TxParam              *TxParams `protobuf:"bytes,1,opt,name=txParam,proto3" json:"txParam,omitempty"`
	TxId                 int64     `protobuf:"varint,2,opt,name=txId,proto3" json:"txId,omitempty"`
	Judge                bool      `protobuf:"varint,3,opt,name=judge,proto3" json:"judge,omitempty"`
	Comments             string    `protobuf:"bytes,4,opt,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *VoteParams) Reset()         { *m = VoteParams{} }
func (m *VoteParams) String() string { return proto.CompactTextString(m) }
func (*VoteParams) ProtoMessage()    {}
func (*VoteParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{17}
}

func (m *VoteParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteParams.Unmarshal(m, b)
}
func (m *VoteParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteParams.Marshal(b, m, deterministic)
}
func (m *VoteParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteParams.Merge(m, src)
}
func (m *VoteParams) XXX_Size() int {
	return xxx_messageInfo_VoteParams.Size(m)
}
func (m *VoteParams) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteParams.DiscardUnknown(m)
}

var xxx_messageInfo_VoteParams proto.InternalMessageInfo

func (m *VoteParams) GetTxParam() *TxParams {
	if m != nil {
		return m.TxParam
	}
	return nil
}

func (m *VoteParams) GetTxId() int64 {
	if m != nil {
		return m.TxId
	}
	return 0
}

func (m *VoteParams) GetJudge() bool {
	if m != nil {
		return m.Judge
	}
	return false
}

func (m *VoteParams) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

type RegisterVerifierParams struct {
	TxParam              *TxParams `protobuf:"bytes,1,opt,name=txParam,proto3" json:"txParam,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RegisterVerifierParams) Reset()         { *m = RegisterVerifierParams{} }
func (m *RegisterVerifierParams) String() string { return proto.CompactTextString(m) }
func (*RegisterVerifierParams) ProtoMessage()    {}
func (*RegisterVerifierParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{18}
}

func (m *RegisterVerifierParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterVerifierParams.Unmarshal(m, b)
}
func (m *RegisterVerifierParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterVerifierParams.Marshal(b, m, deterministic)
}
func (m *RegisterVerifierParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterVerifierParams.Merge(m, src)
}
func (m *RegisterVerifierParams) XXX_Size() int {
	return xxx_messageInfo_RegisterVerifierParams.Size(m)
}
func (m *RegisterVerifierParams) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterVerifierParams.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterVerifierParams proto.InternalMessageInfo

func (m *RegisterVerifierParams) GetTxParam() *TxParams {
	if m != nil {
		return m.TxParam
	}
	return nil
}

type CreditVerifierParams struct {
	TxParam              *TxParams `protobuf:"bytes,1,opt,name=txParam,proto3" json:"txParam,omitempty"`
	TxId                 int64     `protobuf:"varint,2,opt,name=txId,proto3" json:"txId,omitempty"`
	Index                uint32    `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Credit               uint32    `protobuf:"varint,4,opt,name=credit,proto3" json:"credit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreditVerifierParams) Reset()         { *m = CreditVerifierParams{} }
func (m *CreditVerifierParams) String() string { return proto.CompactTextString(m) }
func (*CreditVerifierParams) ProtoMessage()    {}
func (*CreditVerifierParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{19}
}

func (m *CreditVerifierParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditVerifierParams.Unmarshal(m, b)
}
func (m *CreditVerifierParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditVerifierParams.Marshal(b, m, deterministic)
}
func (m *CreditVerifierParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditVerifierParams.Merge(m, src)
}
func (m *CreditVerifierParams) XXX_Size() int {
	return xxx_messageInfo_CreditVerifierParams.Size(m)
}
func (m *CreditVerifierParams) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditVerifierParams.DiscardUnknown(m)
}

var xxx_messageInfo_CreditVerifierParams proto.InternalMessageInfo

func (m *CreditVerifierParams) GetTxParam() *TxParams {
	if m != nil {
		return m.TxParam
	}
	return nil
}

func (m *CreditVerifierParams) GetTxId() int64 {
	if m != nil {
		return m.TxId
	}
	return 0
}

func (m *CreditVerifierParams) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *CreditVerifierParams) GetCredit() uint32 {
	if m != nil {
		return m.Credit
	}
	return 0
}

type TransferTokenParams struct {
	TxParam              *TxParams `protobuf:"bytes,1,opt,name=txParam,proto3" json:"txParam,omitempty"`
	To                   string    `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Value                int64     `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TransferTokenParams) Reset()         { *m = TransferTokenParams{} }
func (m *TransferTokenParams) String() string { return proto.CompactTextString(m) }
func (*TransferTokenParams) ProtoMessage()    {}
func (*TransferTokenParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{20}
}

func (m *TransferTokenParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferTokenParams.Unmarshal(m, b)
}
func (m *TransferTokenParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferTokenParams.Marshal(b, m, deterministic)
}
func (m *TransferTokenParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferTokenParams.Merge(m, src)
}
func (m *TransferTokenParams) XXX_Size() int {
	return xxx_messageInfo_TransferTokenParams.Size(m)
}
func (m *TransferTokenParams) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferTokenParams.DiscardUnknown(m)
}

var xxx_messageInfo_TransferTokenParams proto.InternalMessageInfo

func (m *TransferTokenParams) GetTxParam() *TxParams {
	if m != nil {
		return m.TxParam
	}
	return nil
}

func (m *TransferTokenParams) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *TransferTokenParams) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type TokenBalanceParams struct {
	TxParam              *TxParams `protobuf:"bytes,1,opt,name=txParam,proto3" json:"txParam,omitempty"`
	Owner                string    `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TokenBalanceParams) Reset()         { *m = TokenBalanceParams{} }
func (m *TokenBalanceParams) String() string { return proto.CompactTextString(m) }
func (*TokenBalanceParams) ProtoMessage()    {}
func (*TokenBalanceParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{21}
}

func (m *TokenBalanceParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenBalanceParams.Unmarshal(m, b)
}
func (m *TokenBalanceParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenBalanceParams.Marshal(b, m, deterministic)
}
func (m *TokenBalanceParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenBalanceParams.Merge(m, src)
}
func (m *TokenBalanceParams) XXX_Size() int {
	return xxx_messageInfo_TokenBalanceParams.Size(m)
}
func (m *TokenBalanceParams) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenBalanceParams.DiscardUnknown(m)
}

var xxx_messageInfo_TokenBalanceParams proto.InternalMessageInfo

func (m *TokenBalanceParams) GetTxParam() *TxParams {
	if m != nil {
		return m.TxParam
	}
	return nil
}

func (m *TokenBalanceParams) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type TokenBalanceResult struct {
	Balance              int64    `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Result               *Result  `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenBalanceResult) Reset()         { *m = TokenBalanceResult{} }
func (m *TokenBalanceResult) String() string { return proto.CompactTextString(m) }
func (*TokenBalanceResult) ProtoMessage()    {}
func (*TokenBalanceResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{22}
}

func (m *TokenBalanceResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenBalanceResult.Unmarshal(m, b)
}
func (m *TokenBalanceResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenBalanceResult.Marshal(b, m, deterministic)
}
func (m *TokenBalanceResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenBalanceResult.Merge(m, src)
}
func (m *TokenBalanceResult) XXX_Size() int {
	return xxx_messageInfo_TokenBalanceResult.Size(m)
}
func (m *TokenBalanceResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenBalanceResult.DiscardUnknown(m)
}

var xxx_messageInfo_TokenBalanceResult proto.InternalMessageInfo

func (m *TokenBalanceResult) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *TokenBalanceResult) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type SubscribeInfo struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Event                []string `protobuf:"bytes,2,rep,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeInfo) Reset()         { *m = SubscribeInfo{} }
func (m *SubscribeInfo) String() string { return proto.CompactTextString(m) }
func (*SubscribeInfo) ProtoMessage()    {}
func (*SubscribeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aeef8c45497084a, []int{23}
}

func (m *SubscribeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeInfo.Unmarshal(m, b)
}
func (m *SubscribeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeInfo.Marshal(b, m, deterministic)
}
func (m *SubscribeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeInfo.Merge(m, src)
}
func (m *SubscribeInfo) XXX_Size() int {
	return xxx_messageInfo_SubscribeInfo.Size(m)
}
func (m *SubscribeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeInfo proto.InternalMessageInfo

func (m *SubscribeInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SubscribeInfo) GetEvent() []string {
	if m != nil {
		return m.Event
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateAccountParams)(nil), "api.CreateAccountParams")
	proto.RegisterType((*AccountResult)(nil), "api.AccountResult")
	proto.RegisterType((*TransferEthParams)(nil), "api.TransferEthParams")
	proto.RegisterType((*EthBalanceParams)(nil), "api.EthBalanceParams")
	proto.RegisterType((*EthBalanceResult)(nil), "api.EthBalanceResult")
	proto.RegisterType((*ClientInfo)(nil), "api.ClientInfo")
	proto.RegisterType((*Event)(nil), "api.Event")
	proto.RegisterType((*TxParams)(nil), "api.TxParams")
	proto.RegisterType((*PublishParams)(nil), "api.PublishParams")
	proto.RegisterType((*PublishResult)(nil), "api.PublishResult")
	proto.RegisterType((*PrepareParams)(nil), "api.PrepareParams")
	proto.RegisterType((*Result)(nil), "api.Result")
	proto.RegisterType((*BuyParams)(nil), "api.BuyParams")
	proto.RegisterType((*CancelTxParams)(nil), "api.CancelTxParams")
	proto.RegisterType((*ReEncryptDataParams)(nil), "api.ReEncryptDataParams")
	proto.RegisterType((*DataConfirmParams)(nil), "api.DataConfirmParams")
	proto.RegisterType((*ApproveTransferParams)(nil), "api.ApproveTransferParams")
	proto.RegisterType((*VoteParams)(nil), "api.VoteParams")
	proto.RegisterType((*RegisterVerifierParams)(nil), "api.RegisterVerifierParams")
	proto.RegisterType((*CreditVerifierParams)(nil), "api.CreditVerifierParams")
	proto.RegisterType((*TransferTokenParams)(nil), "api.TransferTokenParams")
	proto.RegisterType((*TokenBalanceParams)(nil), "api.TokenBalanceParams")
	proto.RegisterType((*TokenBalanceResult)(nil), "api.TokenBalanceResult")
	proto.RegisterType((*SubscribeInfo)(nil), "api.SubscribeInfo")
}

func init() { proto.RegisterFile("binary.proto", fileDescriptor_3aeef8c45497084a) }

var fileDescriptor_3aeef8c45497084a = []byte{
	// 1127 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xdd, 0x6e, 0x23, 0xb5,
	0x17, 0xdf, 0x49, 0x9a, 0xb6, 0x39, 0x6d, 0xba, 0xad, 0xfb, 0xf1, 0x9f, 0x7f, 0x40, 0x28, 0x32,
	0x08, 0x72, 0x43, 0xc5, 0x6e, 0x17, 0xad, 0x40, 0x40, 0x49, 0xda, 0x6a, 0xa9, 0x44, 0x51, 0x71,
	0xc3, 0x72, 0xed, 0xcc, 0x38, 0xad, 0x97, 0x64, 0x3c, 0xb2, 0x3d, 0xdd, 0x44, 0x5c, 0x71, 0xc7,
	0x73, 0xf0, 0x26, 0xbc, 0x12, 0x4f, 0x80, 0xec, 0xf1, 0x4c, 0x66, 0x26, 0x59, 0xd8, 0x2c, 0xbd,
	0xcb, 0xef, 0xf8, 0x7c, 0x8f, 0xcf, 0xef, 0xc4, 0xb0, 0x3d, 0xe4, 0x11, 0x95, 0xb3, 0xe3, 0x58,
	0x0a, 0x2d, 0x50, 0x9d, 0xc6, 0x1c, 0x3f, 0x81, 0xfd, 0x33, 0xc9, 0xa8, 0x66, 0xbd, 0x20, 0x10,
	0x49, 0xa4, 0xaf, 0xa9, 0xa4, 0x13, 0x85, 0xda, 0xb0, 0x19, 0x53, 0xa5, 0x5e, 0x0b, 0x19, 0xfa,
	0x5e, 0xc7, 0xeb, 0x36, 0x49, 0x8e, 0x31, 0x81, 0x96, 0x53, 0x26, 0x4c, 0x25, 0x63, 0x8d, 0x3e,
	0x84, 0x75, 0x69, 0x7f, 0xf9, 0xb5, 0x8e, 0xd7, 0xdd, 0x7a, 0xba, 0x75, 0x4c, 0x63, 0x7e, 0x9c,
	0x1e, 0x12, 0x77, 0x84, 0xde, 0x87, 0x26, 0x4d, 0xad, 0x2e, 0x33, 0x97, 0x73, 0x01, 0xe6, 0xb0,
	0x37, 0x90, 0x34, 0x52, 0x23, 0x26, 0x2f, 0xf4, 0x9d, 0x4b, 0x02, 0xc1, 0xda, 0x48, 0x8a, 0x89,
	0xd3, 0xb6, 0xbf, 0x4b, 0x89, 0xd5, 0xca, 0x89, 0xa1, 0x1d, 0xa8, 0x69, 0xe1, 0xd7, 0xad, 0xb4,
	0xa6, 0x05, 0x3a, 0x80, 0xc6, 0x3d, 0x1d, 0x27, 0xcc, 0x5f, 0xeb, 0x78, 0xdd, 0x3a, 0x49, 0x01,
	0xee, 0xc2, 0xee, 0x85, 0xbe, 0xeb, 0xd3, 0x31, 0x8d, 0x02, 0xe6, 0x22, 0x1d, 0x40, 0x43, 0xbc,
	0x8e, 0x98, 0x74, 0xa1, 0x52, 0x80, 0x7f, 0x2c, 0x6a, 0x2e, 0xd4, 0xea, 0xbd, 0xb9, 0x56, 0x1f,
	0x36, 0x86, 0xa9, 0x95, 0xcd, 0xb1, 0x4e, 0x32, 0x88, 0xfb, 0x00, 0x67, 0x63, 0xce, 0x22, 0x7d,
	0x19, 0x8d, 0x84, 0xd1, 0xa3, 0x61, 0x28, 0x99, 0x52, 0x2e, 0x70, 0x06, 0xff, 0xa9, 0x4c, 0xfc,
	0x1c, 0x1a, 0x17, 0xf7, 0x2c, 0xd2, 0xa6, 0x3f, 0x9a, 0x4f, 0x98, 0xb5, 0xad, 0x13, 0xfb, 0xdb,
	0x18, 0xbe, 0x52, 0x22, 0x3a, 0xa7, 0x9a, 0x66, 0x86, 0x19, 0xc6, 0x7f, 0x78, 0xb0, 0x39, 0x98,
	0xbe, 0x63, 0x73, 0xf3, 0x66, 0xd6, 0x0b, 0xcd, 0x34, 0x15, 0xc4, 0x2c, 0x0a, 0x79, 0x74, 0x6b,
	0x9b, 0xbc, 0x49, 0x32, 0x68, 0x7c, 0xdd, 0x52, 0x75, 0x2d, 0x79, 0xc0, 0xfc, 0x86, 0x35, 0xc9,
	0xb1, 0x3b, 0xfb, 0x9e, 0x4f, 0xb8, 0xf6, 0xd7, 0x3b, 0x5e, 0x77, 0x8d, 0xe4, 0x18, 0xff, 0xe5,
	0x41, 0xeb, 0x3a, 0x19, 0x8e, 0xb9, 0xca, 0xae, 0xc1, 0x27, 0xb0, 0xa1, 0xd3, 0xac, 0x5d, 0xcf,
	0x5b, 0xb6, 0xe7, 0x59, 0x25, 0x24, 0x3b, 0x35, 0x29, 0xc6, 0x36, 0x5e, 0xda, 0xf4, 0x14, 0xa0,
	0x0f, 0x00, 0x26, 0x4c, 0x53, 0xd3, 0x81, 0xcb, 0x73, 0x9b, 0xfd, 0x36, 0x29, 0x48, 0x10, 0x86,
	0xed, 0x58, 0x0a, 0x31, 0x4a, 0xa1, 0xf2, 0xd7, 0x3a, 0xf5, 0x6e, 0x93, 0x94, 0x64, 0xb6, 0x31,
	0x06, 0xff, 0x90, 0x4c, 0x6c, 0x31, 0x0d, 0x92, 0x63, 0x73, 0xb1, 0x43, 0xa6, 0x29, 0x1f, 0xab,
	0xcb, 0x73, 0x5b, 0x4d, 0x93, 0xcc, 0x05, 0xe8, 0x23, 0x68, 0xa9, 0x24, 0x8e, 0x85, 0xd4, 0x2f,
	0x99, 0xe4, 0xa3, 0x99, 0xbf, 0x61, 0xdb, 0x54, 0x16, 0x9a, 0x91, 0x72, 0x35, 0x93, 0x7c, 0x5a,
	0xe2, 0x54, 0x30, 0x9f, 0x96, 0x5c, 0xf0, 0x56, 0x03, 0x87, 0xa7, 0xd0, 0xba, 0x96, 0x2c, 0xa6,
	0x92, 0xad, 0xda, 0xc7, 0x52, 0xf0, 0x5a, 0x35, 0x78, 0x07, 0xb6, 0x94, 0xa6, 0x79, 0x3d, 0x75,
	0x5b, 0x4f, 0x51, 0x84, 0xbf, 0x84, 0x75, 0x92, 0x0f, 0x82, 0x4a, 0x82, 0x20, 0xbb, 0xe0, 0x9b,
	0x24, 0x83, 0xe8, 0x08, 0xd6, 0x99, 0x94, 0x57, 0xea, 0xd6, 0x05, 0x70, 0x08, 0x7f, 0x07, 0xcd,
	0x7e, 0x32, 0x5b, 0x35, 0x63, 0x33, 0x09, 0x53, 0x97, 0xac, 0x99, 0x84, 0xe9, 0x65, 0x88, 0xaf,
	0x60, 0xe7, 0xcc, 0xcc, 0xdc, 0x38, 0xbf, 0xf2, 0xff, 0xc9, 0xdd, 0xef, 0x1e, 0xec, 0x13, 0x76,
	0x11, 0x05, 0x72, 0x16, 0x6b, 0x73, 0x2f, 0x1e, 0xc0, 0x29, 0x7a, 0x06, 0x87, 0x2c, 0x0a, 0x44,
	0xc8, 0x42, 0xe3, 0xf1, 0x67, 0xae, 0xef, 0x6e, 0xd8, 0x78, 0xcc, 0xa4, 0xbb, 0xa6, 0xcb, 0x0f,
	0xf1, 0x08, 0xf6, 0x8c, 0xe4, 0x4c, 0x44, 0x23, 0x2e, 0x27, 0x0f, 0x91, 0xc7, 0x01, 0x34, 0xb4,
	0x4c, 0xf4, 0x9d, 0xfb, 0x9a, 0x29, 0xc0, 0x53, 0x38, 0xec, 0xc5, 0xb1, 0x14, 0xf7, 0x2c, 0xe3,
	0xe6, 0x55, 0x63, 0x99, 0xbb, 0x62, 0x08, 0x81, 0xc9, 0x5e, 0x18, 0x4a, 0xf7, 0xa9, 0x8b, 0xa2,
	0xe5, 0xb4, 0x82, 0x7f, 0x05, 0x78, 0x29, 0x34, 0x7b, 0xa0, 0xd2, 0x5e, 0x25, 0xe1, 0x2d, 0xcb,
	0x4a, 0xb3, 0xc0, 0x0c, 0x74, 0x20, 0x26, 0x13, 0x16, 0x69, 0x65, 0x89, 0xab, 0x49, 0x72, 0x8c,
	0x7b, 0x70, 0x44, 0xd8, 0x2d, 0x57, 0x9a, 0x49, 0x7b, 0xa1, 0xf9, 0xca, 0x75, 0xe3, 0xdf, 0x3c,
	0x38, 0x38, 0x93, 0x2c, 0xe4, 0xfa, 0x1d, 0x3d, 0xbc, 0xa9, 0x14, 0x1e, 0x85, 0x6c, 0x6a, 0x4b,
	0x69, 0x91, 0x14, 0x98, 0x49, 0x0a, 0x6c, 0x28, 0x5b, 0x48, 0x8b, 0x38, 0x84, 0x43, 0xd8, 0xcf,
	0x3e, 0xdb, 0x40, 0xfc, 0xc2, 0xa2, 0x55, 0x33, 0x48, 0xb7, 0x69, 0x6d, 0x71, 0x9b, 0x96, 0xbe,
	0xd4, 0x0d, 0x20, 0xeb, 0xbd, 0xbc, 0x4f, 0x57, 0xa1, 0xec, 0x74, 0xf1, 0xd6, 0x8a, 0x8b, 0xb7,
	0xe2, 0x94, 0x2c, 0x6c, 0x55, 0xaf, 0xb4, 0x55, 0xdf, 0x8e, 0x0f, 0x4f, 0xa1, 0x75, 0x93, 0x0c,
	0x55, 0x20, 0xf9, 0x90, 0xfd, 0xcb, 0xf6, 0x3d, 0x80, 0x06, 0x33, 0x1b, 0xd6, 0xaf, 0xd9, 0x5d,
	0x90, 0x82, 0xa7, 0x7f, 0x6e, 0x42, 0xab, 0x6f, 0xff, 0x40, 0xdd, 0x30, 0x79, 0x6f, 0x56, 0xcb,
	0x09, 0xec, 0xe4, 0x2e, 0xdd, 0x4a, 0xb6, 0x91, 0x4b, 0x71, 0xda, 0xc5, 0x6c, 0xf0, 0x23, 0xf4,
	0x39, 0xec, 0xfe, 0x14, 0xad, 0x6e, 0xf6, 0x29, 0x00, 0x61, 0xc1, 0xbd, 0xd5, 0x57, 0xe8, 0xb1,
	0x3d, 0x9c, 0xff, 0x95, 0x68, 0x83, 0x15, 0xd8, 0x53, 0xfc, 0xe8, 0x33, 0x0f, 0x9d, 0xc0, 0x86,
	0xdb, 0x28, 0xce, 0x79, 0x69, 0xa7, 0xb6, 0x4b, 0xb2, 0x3c, 0xc6, 0x13, 0xd8, 0x76, 0x2b, 0x63,
	0x20, 0xfa, 0xc9, 0x2c, 0xb3, 0x2c, 0x6e, 0x91, 0x6a, 0x5a, 0x5d, 0xd8, 0xe8, 0x27, 0x33, 0x43,
	0x47, 0x68, 0xc7, 0x9e, 0xe4, 0xec, 0x5d, 0xd5, 0x7c, 0x0e, 0x7b, 0x8e, 0x8f, 0xcd, 0xad, 0xa4,
	0x81, 0xe6, 0x22, 0x42, 0xfb, 0x69, 0x1d, 0x25, 0x9e, 0xae, 0x1a, 0x7e, 0x53, 0x20, 0xde, 0xab,
	0x6c, 0x6f, 0x87, 0xc8, 0x77, 0x5a, 0x0b, 0x94, 0x5c, 0xb5, 0xff, 0x02, 0x76, 0x1d, 0x55, 0x1a,
	0x9d, 0x81, 0xa1, 0x36, 0x74, 0x64, 0x55, 0x16, 0x58, 0xb4, 0x6a, 0xfa, 0x15, 0x3c, 0xae, 0x30,
	0x20, 0x6a, 0x5b, 0x8d, 0xa5, 0xbc, 0x58, 0xb5, 0xfe, 0x18, 0xd6, 0x0c, 0x8b, 0xb9, 0x8f, 0x35,
	0x27, 0xb4, 0xaa, 0xde, 0xb7, 0x80, 0x32, 0xc2, 0xe9, 0xa9, 0x8c, 0x30, 0xd0, 0x7b, 0x4e, 0x69,
	0x19, 0x13, 0x55, 0x3d, 0x7c, 0x0d, 0x7b, 0x29, 0xdd, 0xa8, 0x81, 0xc8, 0x1d, 0xfc, 0x3f, 0xed,
	0xed, 0x12, 0x1a, 0x5a, 0xec, 0xd0, 0x4e, 0x89, 0x2a, 0x94, 0x6b, 0xee, 0x12, 0xfe, 0xa8, 0x9a,
	0x5e, 0xc0, 0xe3, 0x17, 0x4c, 0x17, 0xa7, 0x15, 0xfd, 0x2f, 0xb5, 0x5d, 0x60, 0x85, 0xf6, 0xe2,
	0x41, 0xee, 0xe6, 0x14, 0x5a, 0xa5, 0x67, 0x88, 0x4b, 0x60, 0xc9, 0xd3, 0xc4, 0x5d, 0xdd, 0xd2,
	0x0b, 0x04, 0x3f, 0x42, 0xc7, 0xb0, 0xdd, 0x4b, 0xf4, 0x1d, 0x8b, 0x34, 0x0f, 0x68, 0xde, 0xf3,
	0xc2, 0x80, 0x54, 0xf2, 0x7e, 0x06, 0x5b, 0x85, 0x07, 0x87, 0xbb, 0x0f, 0x0b, 0x4f, 0x90, 0xaa,
	0xd5, 0x29, 0xb4, 0x5e, 0x30, 0x3d, 0x7f, 0x14, 0xa0, 0xc3, 0x74, 0xec, 0x2a, 0xef, 0x89, 0x76,
	0x55, 0x9c, 0x39, 0x18, 0xae, 0xdb, 0xa7, 0xd7, 0xc9, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7b,
	0xb5, 0x1e, 0x72, 0x8a, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BinaryServiceClient is the client API for BinaryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BinaryServiceClient interface {
	//subscribe event
	SubscribeEvent(ctx context.Context, in *SubscribeInfo, opts ...grpc.CallOption) (*Result, error)
	//unsubscribe event
	UnSubscribeEvent(ctx context.Context, in *SubscribeInfo, opts ...grpc.CallOption) (*Result, error)
	//receive events by creating a server stream channel
	RecvEvents(ctx context.Context, in *ClientInfo, opts ...grpc.CallOption) (BinaryService_RecvEventsClient, error)
	//publish
	Publish(ctx context.Context, in *PublishParams, opts ...grpc.CallOption) (*PublishResult, error)
	//prepare to buy
	PrepareToBuy(ctx context.Context, in *PrepareParams, opts ...grpc.CallOption) (*Result, error)
	//buy
	BuyData(ctx context.Context, in *BuyParams, opts ...grpc.CallOption) (*Result, error)
	//cancel transaction
	CancelTransaction(ctx context.Context, in *CancelTxParams, opts ...grpc.CallOption) (*Result, error)
	//decrypt with seller private key, then encrypt with buyer public key and arbitrators public key
	ReEncryptMetaDataId(ctx context.Context, in *ReEncryptDataParams, opts ...grpc.CallOption) (*Result, error)
	//confirm data truth
	ConfirmDataTruth(ctx context.Context, in *DataConfirmParams, opts ...grpc.CallOption) (*Result, error)
	//approve transfer
	ApproveTransfer(ctx context.Context, in *ApproveTransferParams, opts ...grpc.CallOption) (*Result, error)
	//vote
	Vote(ctx context.Context, in *VoteParams, opts ...grpc.CallOption) (*Result, error)
	//register as verifier
	RegisterAsVerifier(ctx context.Context, in *RegisterVerifierParams, opts ...grpc.CallOption) (*Result, error)
	//credits to verifier
	CreditsToVerifier(ctx context.Context, in *CreditVerifierParams, opts ...grpc.CallOption) (*Result, error)
	//transfer tokens
	TransferTokens(ctx context.Context, in *TransferTokenParams, opts ...grpc.CallOption) (*Result, error)
	//get token balance
	GetTokenBalance(ctx context.Context, in *TokenBalanceParams, opts ...grpc.CallOption) (*TokenBalanceResult, error)
	//create account
	CreateAccount(ctx context.Context, in *CreateAccountParams, opts ...grpc.CallOption) (*AccountResult, error)
	//authenticate
	Authenticate(ctx context.Context, in *ClientInfo, opts ...grpc.CallOption) (*Result, error)
	//transfer eth
	TransferEth(ctx context.Context, in *TransferEthParams, opts ...grpc.CallOption) (*Result, error)
	//get eth balance
	GetEthBalance(ctx context.Context, in *EthBalanceParams, opts ...grpc.CallOption) (*EthBalanceResult, error)
}

type binaryServiceClient struct {
	cc *grpc.ClientConn
}

func NewBinaryServiceClient(cc *grpc.ClientConn) BinaryServiceClient {
	return &binaryServiceClient{cc}
}

func (c *binaryServiceClient) SubscribeEvent(ctx context.Context, in *SubscribeInfo, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/api.BinaryService/SubscribeEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) UnSubscribeEvent(ctx context.Context, in *SubscribeInfo, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/api.BinaryService/UnSubscribeEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) RecvEvents(ctx context.Context, in *ClientInfo, opts ...grpc.CallOption) (BinaryService_RecvEventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BinaryService_serviceDesc.Streams[0], "/api.BinaryService/RecvEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &binaryServiceRecvEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BinaryService_RecvEventsClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type binaryServiceRecvEventsClient struct {
	grpc.ClientStream
}

func (x *binaryServiceRecvEventsClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *binaryServiceClient) Publish(ctx context.Context, in *PublishParams, opts ...grpc.CallOption) (*PublishResult, error) {
	out := new(PublishResult)
	err := c.cc.Invoke(ctx, "/api.BinaryService/Publish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) PrepareToBuy(ctx context.Context, in *PrepareParams, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/api.BinaryService/PrepareToBuy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) BuyData(ctx context.Context, in *BuyParams, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/api.BinaryService/BuyData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) CancelTransaction(ctx context.Context, in *CancelTxParams, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/api.BinaryService/CancelTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) ReEncryptMetaDataId(ctx context.Context, in *ReEncryptDataParams, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/api.BinaryService/ReEncryptMetaDataId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) ConfirmDataTruth(ctx context.Context, in *DataConfirmParams, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/api.BinaryService/ConfirmDataTruth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) ApproveTransfer(ctx context.Context, in *ApproveTransferParams, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/api.BinaryService/ApproveTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) Vote(ctx context.Context, in *VoteParams, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/api.BinaryService/Vote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) RegisterAsVerifier(ctx context.Context, in *RegisterVerifierParams, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/api.BinaryService/RegisterAsVerifier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) CreditsToVerifier(ctx context.Context, in *CreditVerifierParams, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/api.BinaryService/CreditsToVerifier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) TransferTokens(ctx context.Context, in *TransferTokenParams, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/api.BinaryService/TransferTokens", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) GetTokenBalance(ctx context.Context, in *TokenBalanceParams, opts ...grpc.CallOption) (*TokenBalanceResult, error) {
	out := new(TokenBalanceResult)
	err := c.cc.Invoke(ctx, "/api.BinaryService/GetTokenBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) CreateAccount(ctx context.Context, in *CreateAccountParams, opts ...grpc.CallOption) (*AccountResult, error) {
	out := new(AccountResult)
	err := c.cc.Invoke(ctx, "/api.BinaryService/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) Authenticate(ctx context.Context, in *ClientInfo, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/api.BinaryService/Authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) TransferEth(ctx context.Context, in *TransferEthParams, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/api.BinaryService/TransferEth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binaryServiceClient) GetEthBalance(ctx context.Context, in *EthBalanceParams, opts ...grpc.CallOption) (*EthBalanceResult, error) {
	out := new(EthBalanceResult)
	err := c.cc.Invoke(ctx, "/api.BinaryService/GetEthBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BinaryServiceServer is the server API for BinaryService service.
type BinaryServiceServer interface {
	//subscribe event
	SubscribeEvent(context.Context, *SubscribeInfo) (*Result, error)
	//unsubscribe event
	UnSubscribeEvent(context.Context, *SubscribeInfo) (*Result, error)
	//receive events by creating a server stream channel
	RecvEvents(*ClientInfo, BinaryService_RecvEventsServer) error
	//publish
	Publish(context.Context, *PublishParams) (*PublishResult, error)
	//prepare to buy
	PrepareToBuy(context.Context, *PrepareParams) (*Result, error)
	//buy
	BuyData(context.Context, *BuyParams) (*Result, error)
	//cancel transaction
	CancelTransaction(context.Context, *CancelTxParams) (*Result, error)
	//decrypt with seller private key, then encrypt with buyer public key and arbitrators public key
	ReEncryptMetaDataId(context.Context, *ReEncryptDataParams) (*Result, error)
	//confirm data truth
	ConfirmDataTruth(context.Context, *DataConfirmParams) (*Result, error)
	//approve transfer
	ApproveTransfer(context.Context, *ApproveTransferParams) (*Result, error)
	//vote
	Vote(context.Context, *VoteParams) (*Result, error)
	//register as verifier
	RegisterAsVerifier(context.Context, *RegisterVerifierParams) (*Result, error)
	//credits to verifier
	CreditsToVerifier(context.Context, *CreditVerifierParams) (*Result, error)
	//transfer tokens
	TransferTokens(context.Context, *TransferTokenParams) (*Result, error)
	//get token balance
	GetTokenBalance(context.Context, *TokenBalanceParams) (*TokenBalanceResult, error)
	//create account
	CreateAccount(context.Context, *CreateAccountParams) (*AccountResult, error)
	//authenticate
	Authenticate(context.Context, *ClientInfo) (*Result, error)
	//transfer eth
	TransferEth(context.Context, *TransferEthParams) (*Result, error)
	//get eth balance
	GetEthBalance(context.Context, *EthBalanceParams) (*EthBalanceResult, error)
}

func RegisterBinaryServiceServer(s *grpc.Server, srv BinaryServiceServer) {
	s.RegisterService(&_BinaryService_serviceDesc, srv)
}

func _BinaryService_SubscribeEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).SubscribeEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/SubscribeEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).SubscribeEvent(ctx, req.(*SubscribeInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_UnSubscribeEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).UnSubscribeEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/UnSubscribeEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).UnSubscribeEvent(ctx, req.(*SubscribeInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_RecvEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ClientInfo)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BinaryServiceServer).RecvEvents(m, &binaryServiceRecvEventsServer{stream})
}

type BinaryService_RecvEventsServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type binaryServiceRecvEventsServer struct {
	grpc.ServerStream
}

func (x *binaryServiceRecvEventsServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

func _BinaryService_Publish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).Publish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/Publish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).Publish(ctx, req.(*PublishParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_PrepareToBuy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrepareParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).PrepareToBuy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/PrepareToBuy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).PrepareToBuy(ctx, req.(*PrepareParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_BuyData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuyParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).BuyData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/BuyData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).BuyData(ctx, req.(*BuyParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_CancelTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelTxParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).CancelTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/CancelTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).CancelTransaction(ctx, req.(*CancelTxParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_ReEncryptMetaDataId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReEncryptDataParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).ReEncryptMetaDataId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/ReEncryptMetaDataId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).ReEncryptMetaDataId(ctx, req.(*ReEncryptDataParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_ConfirmDataTruth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataConfirmParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).ConfirmDataTruth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/ConfirmDataTruth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).ConfirmDataTruth(ctx, req.(*DataConfirmParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_ApproveTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApproveTransferParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).ApproveTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/ApproveTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).ApproveTransfer(ctx, req.(*ApproveTransferParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_Vote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoteParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).Vote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/Vote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).Vote(ctx, req.(*VoteParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_RegisterAsVerifier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterVerifierParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).RegisterAsVerifier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/RegisterAsVerifier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).RegisterAsVerifier(ctx, req.(*RegisterVerifierParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_CreditsToVerifier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreditVerifierParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).CreditsToVerifier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/CreditsToVerifier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).CreditsToVerifier(ctx, req.(*CreditVerifierParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_TransferTokens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferTokenParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).TransferTokens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/TransferTokens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).TransferTokens(ctx, req.(*TransferTokenParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_GetTokenBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenBalanceParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).GetTokenBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/GetTokenBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).GetTokenBalance(ctx, req.(*TokenBalanceParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).CreateAccount(ctx, req.(*CreateAccountParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).Authenticate(ctx, req.(*ClientInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_TransferEth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferEthParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).TransferEth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/TransferEth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).TransferEth(ctx, req.(*TransferEthParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinaryService_GetEthBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EthBalanceParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinaryServiceServer).GetEthBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BinaryService/GetEthBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinaryServiceServer).GetEthBalance(ctx, req.(*EthBalanceParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _BinaryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.BinaryService",
	HandlerType: (*BinaryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubscribeEvent",
			Handler:    _BinaryService_SubscribeEvent_Handler,
		},
		{
			MethodName: "UnSubscribeEvent",
			Handler:    _BinaryService_UnSubscribeEvent_Handler,
		},
		{
			MethodName: "Publish",
			Handler:    _BinaryService_Publish_Handler,
		},
		{
			MethodName: "PrepareToBuy",
			Handler:    _BinaryService_PrepareToBuy_Handler,
		},
		{
			MethodName: "BuyData",
			Handler:    _BinaryService_BuyData_Handler,
		},
		{
			MethodName: "CancelTransaction",
			Handler:    _BinaryService_CancelTransaction_Handler,
		},
		{
			MethodName: "ReEncryptMetaDataId",
			Handler:    _BinaryService_ReEncryptMetaDataId_Handler,
		},
		{
			MethodName: "ConfirmDataTruth",
			Handler:    _BinaryService_ConfirmDataTruth_Handler,
		},
		{
			MethodName: "ApproveTransfer",
			Handler:    _BinaryService_ApproveTransfer_Handler,
		},
		{
			MethodName: "Vote",
			Handler:    _BinaryService_Vote_Handler,
		},
		{
			MethodName: "RegisterAsVerifier",
			Handler:    _BinaryService_RegisterAsVerifier_Handler,
		},
		{
			MethodName: "CreditsToVerifier",
			Handler:    _BinaryService_CreditsToVerifier_Handler,
		},
		{
			MethodName: "TransferTokens",
			Handler:    _BinaryService_TransferTokens_Handler,
		},
		{
			MethodName: "GetTokenBalance",
			Handler:    _BinaryService_GetTokenBalance_Handler,
		},
		{
			MethodName: "CreateAccount",
			Handler:    _BinaryService_CreateAccount_Handler,
		},
		{
			MethodName: "Authenticate",
			Handler:    _BinaryService_Authenticate_Handler,
		},
		{
			MethodName: "TransferEth",
			Handler:    _BinaryService_TransferEth_Handler,
		},
		{
			MethodName: "GetEthBalance",
			Handler:    _BinaryService_GetEthBalance_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RecvEvents",
			Handler:       _BinaryService_RecvEvents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "binary.proto",
}
